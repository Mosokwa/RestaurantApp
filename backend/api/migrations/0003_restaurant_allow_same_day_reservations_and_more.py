# Generated by Django 5.2.6 on 2025-10-13 13:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_itemassociation_popularitysnapshot_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='restaurant',
            name='allow_same_day_reservations',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='auto_assign_tables',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='cancellation_policy_hours',
            field=models.IntegerField(default=24),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='deposit_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=8),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='deposit_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='max_party_size',
            field=models.IntegerField(default=20),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='min_party_size',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='require_phone_verification',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='requires_confirmation',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='reservation_duration_options',
            field=models.JSONField(default=list, help_text='Available duration options in minutes, e.g., [60, 90, 120]'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='reservation_lead_time_hours',
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='reservation_max_days_ahead',
            field=models.IntegerField(default=30),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='reservation_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='time_slot_interval',
            field=models.IntegerField(default=15, help_text='Time slot interval in minutes'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='reservation_enabled',
            field=models.BooleanField(default=False, help_text='Enable table reservations for this restaurant'),
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('table_id', models.AutoField(primary_key=True, serialize=False)),
                ('table_number', models.CharField(max_length=10)),
                ('table_name', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('table_type', models.CharField(choices=[('indoor', 'Indoor'), ('outdoor', 'Outdoor'), ('booth', 'Booth'), ('bar', 'Bar'), ('private', 'Private Room')], default='indoor', max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('position_x', models.IntegerField(default=0)),
                ('position_y', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_party_size', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_party_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='api.branch')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='api.restaurant')),
            ],
            options={
                'db_table': 'tables',
                'ordering': ['branch', 'table_number'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.AutoField(primary_key=True, serialize=False)),
                ('reservation_date', models.DateField()),
                ('reservation_time', models.TimeField()),
                ('duration_minutes', models.IntegerField(default=90, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(360)])),
                ('party_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('special_occasion', models.CharField(choices=[('none', 'None'), ('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('business', 'Business Meeting'), ('date', 'Romantic Date'), ('family', 'Family Gathering'), ('celebration', 'Celebration')], default='none', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('seated', 'Seated'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('reservation_code', models.CharField(db_index=True, max_length=8, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.branch')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.customer')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.restaurant')),
                ('table', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='api.table')),
            ],
            options={
                'db_table': 'reservations',
                'ordering': ['-reservation_date', '-reservation_time'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('slot_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('reserved_count', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='api.branch')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='api.restaurant')),
            ],
            options={
                'db_table': 'time_slots',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='table',
            index=models.Index(fields=['branch', 'is_available'], name='tables_branch__d8131e_idx'),
        ),
        migrations.AddIndex(
            model_name='table',
            index=models.Index(fields=['table_type', 'capacity'], name='tables_table_t_fa17c9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='table',
            unique_together={('branch', 'table_number')},
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['reservation_date', 'reservation_time'], name='reservation_reserva_7ccf03_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['status', 'reservation_date'], name='reservation_status_adee38_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['reservation_code'], name='reservation_reserva_c84de6_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['customer', 'created_at'], name='reservation_custome_997050_idx'),
        ),
        migrations.AddIndex(
            model_name='timeslot',
            index=models.Index(fields=['branch', 'date', 'is_available'], name='time_slots_branch__cc0b47_idx'),
        ),
        migrations.AddIndex(
            model_name='timeslot',
            index=models.Index(fields=['date', 'start_time'], name='time_slots_date_964cb4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timeslot',
            unique_together={('branch', 'date', 'start_time')},
        ),
    ]
